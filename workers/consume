<?php

require_once __DIR__ . '/workers/bootstrap.php';

use Worker\Worker;
use PhpAmqpLib\Exception\AMQPRuntimeException;
use PhpAmqpLib\Exception\AMQPIOException;
use PhpAmqpLib\Exception\AMQPIOWaitException;
use Worker\Extras\Logger;

while(true) {
    try {
        $connect = new \Worker\Consumer();
        $connect->connect()->channel()->consume($queue)->run();
    } catch (AMQPRuntimeException $e) {
        Logger::emergency('RabbitMQ connection closed unexpectedly', ['message' => $e->getMessage()]);
        sleep(Worker::WAIT_BEFORE_RECONNECT_US);
    } catch (\RuntimeException $e) {
        Logger::emergency('RabbitMQ connection closed unexpectedly', ['message' => $e->getMessage()]);
        sleep(Worker::WAIT_BEFORE_RECONNECT_US);
    } catch (\ErrorException $e) {
        Logger::emergency('RabbitMQ connection closed unexpectedly', ['message' => $e->getMessage()]);
        sleep(Worker::WAIT_BEFORE_RECONNECT_US);
    } catch (AMQPIOException $e) {
        Logger::emergency('RabbitMQ couldn\'t connect to rabbit server', ['code' => $e->getCode()]);
        sleep(Worker::WAIT_BEFORE_RECONNECT_US);
    } catch (\Throwable $e) {
        Logger::emergency($e->getMessage(), ['file' => $e->getFile(), 'line' => $e->getLine(),
            'trace string' => $e->getTraceAsString()]);
        sleep(Worker::WAIT_BEFORE_RECONNECT_US);
    }
}